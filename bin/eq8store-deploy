#!/usr/bin/env node

'use strict';

const program = require('commander');

const pkg = require('../package.json');

/**
 * Program Options
 */
program
	.description('Deploys an eq8store stack in Docker')
  .version(pkg.version)
	.option('--stack-name', 'The eq8store stack name to deploy in Docker')
	.option('--http-port <num>', 'HTTP service port', parseInt)
	.option('--amqp-port <num>', 'AMQP service port', parseInt)
	.option('--disable-amqp', 'Disable and use an external AMQP service')
	.option('--amqp-dsn <uri>', 'Required if `--disable-amqp` is on')
	.option('--dockerd <uri>', 'Docker daemon socket to connect to')
	.option('--tls', 'Use TLS')
	.option('--tlscert <path>', 'Path to TLS certificate file - e.g. /opt/eq8store/cert.pem')
	.option('--tlskey <path>', 'Path to TLS key file - e.g. /opt/eq8store/key.pem')
	.option('--replicas <num>', 'Number of worker replicas to create', parseInt)
  .parse(process.argv);

const spawn = require('child_process').spawn;

const deploy = spawn('docker-compose', ['up', '-d']);

deploy.stdout.on('data', (data) => {
		process.stdout.write(data);
});

deploy.stderr.on('data', (data) => {
		process.stderr.write(data);
});

deploy.on('close', (code) => {
	process.exit(code);
});
